// GENERATED build.gradle.kts
// GENERATED BY kotlin.all-tests.iml
// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE

plugins {
    kotlin("jvm")
    id("jps-compatible")
}

dependencies {
    
    implementation(project(":kotlin-ide:common"))
    implementation(project(":kotlin-ide:compiler-plugins:allopen"))
    implementation(project(":kotlin-ide:compiler-plugins:annotation-based-compiler-support"))
    implementation(project(":kotlin-ide:compiler-plugins:kapt"))
    implementation(project(":kotlin-ide:compiler-plugins:kotlinx-serialization"))
    implementation(project(":kotlin-ide:compiler-plugins:noarg"))
    implementation(project(":kotlin-ide:compiler-plugins:sam-with-receiver"))
    implementation(project(":kotlin-ide:compiler-plugins:scripting"))
    implementation(project(":kotlin-ide:core"))
    implementation(project(":kotlin-ide:formatter"))
    implementation(project(":kotlin-ide:git"))
    implementation(project(":kotlin-ide:gradle:gradle-idea"))
    implementation(project(":kotlin-ide:gradle:gradle-native"))
    implementation(project(":kotlin-ide:gradle:gradle-tooling"))
    implementation(project(":kotlin-ide:idea"))
    implementation(project(":kotlin-ide:j2k:idea"))
    implementation(project(":kotlin-ide:j2k:new"))
    implementation(project(":kotlin-ide:j2k:old"))
    implementation(project(":kotlin-ide:j2k:services"))
    implementation(project(":kotlin-ide:jps:jps-common"))
    implementation(project(":kotlin-ide:jps:jps-plugin"))
    implementation(project(":kotlin-ide:jvm"))
    implementation(project(":kotlin-ide:jvm-debugger:core"))
    implementation(project(":kotlin-ide:jvm-debugger:coroutines"))
    implementation(project(":kotlin-ide:jvm-debugger:eval4j"))
    implementation(project(":kotlin-ide:jvm-debugger:evaluation"))
    implementation(project(":kotlin-ide:jvm-debugger:sequence"))
    implementation(project(":kotlin-ide:jvm-debugger:test"))
    implementation(project(":kotlin-ide:jvm-debugger:util"))
    implementation(project(":kotlin-ide:maven"))
    implementation(project(":kotlin-ide:native"))
    implementation(project(":kotlin-ide:project-wizard:cli"))
    implementation(project(":kotlin-ide:project-wizard:core"))
    implementation(project(":kotlin-ide:project-wizard:idea"))
    implementation(project(":kotlin-ide:repl"))
    implementation(project(":kotlin-ide:scripting"))
    implementation(project(":kotlin-ide:scripting-support"))
    implementation(project(":kotlin-ide:test-framework"))
    implementation(project(":kotlin-ide:tests-common"))
    implementation(project(":kotlin-ide:uast:uast-kotlin"))
    implementation(project(":kotlin-ide:uast:uast-kotlin-idea"))
    implementation(project(":kotlin-ide:performance-tests"))
    implementation(project(":kotlin-ide:compiler-plugins:scripting-ide-services"))
    implementation(project(":kotlin-ide:frontend-independent"))
    implementation(project(":kotlin-ide:line-indent-provider"))
    implementation(project(":kotlin-ide:resources-descriptors"))
    implementation(project(":kotlin-ide:compiler-plugins:parcelize"))
}

sourceSets {
    "main" {
        java.srcDir("src")
    }
    "test" {
        
    }
}