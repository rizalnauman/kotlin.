// GENERATED build.gradle.kts
// GENERATED BY kotlin.idea.iml
// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE

plugins {
    kotlin("jvm")
    id("jps-compatible")
}

dependencies {
    
    implementation(project(":kotlin-ide:common"))
    implementation(project(":kotlin-ide:core"))
    implementation(project(":kotlin-ide:frontend-independent"))
    implementation(project(":kotlin-ide:jps:jps-common"))
    implementation(project(":kotlin-ide:j2k:old"))
    implementation(project(":kotlin-ide:j2k:new"))
    implementation(project(":kotlin-ide:formatter"))
    implementation(project(":kotlin-ide:j2k:idea"))
    implementation(project(":kotlin-ide:gradle:gradle-tooling"))
    implementation(project(":kotlin-ide:jvm-debugger:sequence"))
    implementation(project(":kotlin-ide:scripting"))
    implementation(project(":kotlin-ide:jvm"))
    implementation(project(":kotlin-ide:jvm-debugger:core"))
    implementation(project(":kotlin-ide:line-indent-provider"))
    implementation(project(":kotlin-ide:test-framework"))
    implementation(project(":kotlin-ide:tests-common"))
    implementation(project(":kotlin-ide:repl"))
    implementation(project(":kotlin-ide:jvm-debugger:util"))
    implementation(project(":kotlin-ide:native"))
    implementation(project(":kotlin-ide:gradle:gradle-native"))
    implementation(project(":kotlin-ide:maven"))
    implementation(project(":kotlin-ide:uast:uast-kotlin"))
    implementation(project(":kotlin-ide:uast:uast-kotlin-idea"))
    implementation(project(":kotlin-ide:jvm-debugger:evaluation"))
    implementation(project(":kotlin-ide:compiler-plugins:sam-with-receiver"))
    implementation(project(":kotlin-ide:compiler-plugins:noarg"))
    implementation(project(":kotlin-ide:compiler-plugins:kotlinx-serialization"))
    implementation(project(":kotlin-ide:compiler-plugins:allopen"))
    implementation(project(":kotlin-ide:compiler-plugins:parcelize"))
    implementation(project(":kotlin-ide:j2k:services"))
    implementation(intellijPluginDep("lib/platform-api"))
    implementation(intellijPluginDep("lib/resources_en"))
    implementation(intellijPluginDep("lib/platform-impl"))
    implementation(intellijPluginDep("lib/platform-statistics"))
    implementation(intellijPluginDep("lib/intellij-dvcs"))
    implementation(intellijPluginDep("plugins/IntelliLang/lib/IntelliLang"))
    implementation(intellijPluginDep("lib/platform-serviceContainer"))
    implementation(intellijPluginDep("plugins/java/lib/java-api"))
    implementation(intellijPluginDep("plugins/java/lib/java_resources_en"))
    implementation(intellijPluginDep("intellij-core-analysis-deprecated"))
    implementation(intellijPluginDep("plugins/java/lib/java-impl"))
    implementation(intellijPluginDep("plugins/junit/lib/idea-junit"))
    implementation(intellijPluginDep("plugins/junit/lib/resources_en"))
    implementation(intellijPluginDep("plugins/Groovy/lib/Groovy"))
    implementation(intellijPluginDep("plugins/gradle/lib/gradle-common"))
    implementation(intellijPluginDep("plugins/markdown/lib/markdown"))
    implementation(intellijPluginDep("plugins/markdown/lib/resources_en"))
    implementation(intellijPluginDep("lib/spellchecker"))
    implementation(intellijPluginDep("plugins/copyright/lib/copyright"))
    implementation(intellijPluginDep("plugins/copyright/lib/resources_en"))
    implementation(intellijPluginDep("plugins/properties/lib/properties"))
    implementation(intellijPluginDep("plugins/properties/lib/resources_en"))
    implementation(intellijPluginDep("lib/platform-core-ui"))
    implementation(intellijPluginDep("lib/idea"))
    implementation(project(":kotlin-ide:resources-descriptors"))
}

sourceSets {
    "main" {
        resources.srcDir("../completion/resources")
        java.srcDir("../completion/src")
        java.srcDir("src")
        resources.srcDir("resources")
        resources.srcDir("resources-en")
        java.srcDir("../live-templates/src")
    }
    "test" {
        java.srcDir("../completion/test")
        java.srcDir("test")
        java.srcDir("../live-templates/test")
    }
}