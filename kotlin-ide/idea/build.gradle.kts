// GENERATED build.gradle.kts
// GENERATED BY kotlin.idea.iml
// USE `./gradlew generateGradleByIml` TO REGENERATE THIS FILE

plugins {
    kotlin("jvm")
    id("jps-compatible")
}

dependencies {
    
    jpsLikeCompile(":kotlin-ide:common")
    jpsLikeCompile(":kotlin-ide:core")
    jpsLikeCompile(":kotlin-ide:frontend-independent")
    jpsLikeCompile(":kotlin-ide:jps:jps-common")
    jpsLikeCompile(":kotlin-ide:j2k:old")
    jpsLikeCompile(":kotlin-ide:j2k:new")
    jpsLikeCompile(":kotlin-ide:formatter")
    jpsLikeCompile(":kotlin-ide:j2k:idea")
    jpsLikeCompile(":kotlin-ide:gradle:gradle-tooling")
    jpsLikeCompile(":kotlin-ide:jvm-debugger:sequence")
    jpsLikeCompile(":kotlin-ide:scripting")
    jpsLikeTest(":kotlin-ide:jvm")
    jpsLikeCompile(":kotlin-ide:jvm-debugger:core")
    jpsLikeCompile(":kotlin-ide:line-indent-provider")
    jpsLikeTest(":kotlin-ide:test-framework")
    jpsLikeTest(":kotlin-ide:tests-common")
    jpsLikeTest(":kotlin-ide:repl")
    jpsLikeTest(":kotlin-ide:jvm-debugger:util")
    jpsLikeTest(":kotlin-ide:native")
    jpsLikeTest(":kotlin-ide:gradle:gradle-native")
    jpsLikeTest(":kotlin-ide:maven")
    jpsLikeTest(":kotlin-ide:uast:uast-kotlin")
    jpsLikeTest(":kotlin-ide:uast:uast-kotlin-idea")
    jpsLikeTest(":kotlin-ide:jvm-debugger:evaluation")
    jpsLikeTest(":kotlin-ide:compiler-plugins:sam-with-receiver")
    jpsLikeTest(":kotlin-ide:compiler-plugins:noarg")
    jpsLikeTest(":kotlin-ide:compiler-plugins:kotlinx-serialization")
    jpsLikeTest(":kotlin-ide:compiler-plugins:allopen")
    jpsLikeTest(":kotlin-ide:compiler-plugins:parcelize")
    jpsLikeTest(":kotlin-ide:j2k:services")
    implementation(intellijDep(), { includeJars("platform-api") })
    implementation(intellijDep(), { includeJars("resources_en") })
    implementation(intellijDep(), { includeJars("platform-impl") })
    implementation(intellijDep(), { includeJars("platform-statistics") })
    implementation(intellijDep(), { includeJars("intellij-dvcs") })
    implementation(intellijPluginDep("IntelliLang"))
    implementation(intellijDep(), { includeJars("platform-serviceContainer") })
    implementation(intellijPluginDep("java"))
    implementation(intellijDep(), { includeJars("intellij-core-analysis-deprecated") })
    implementation(intellijPluginDep("junit"))
    implementation(intellijPluginDep("Groovy"))
    implementation(intellijPluginDep("gradle"))
    implementation(intellijPluginDep("markdown"))
    implementation(intellijDep(), { includeJars("spellchecker") })
    implementation(intellijPluginDep("copyright"))
    implementation(intellijPluginDep("properties"))
    implementation(intellijDep(), { includeJars("platform-core-ui") })
    implementation(intellijDep(), { includeJars("idea") })
    jpsLikeCompile(":kotlin-ide:resources-descriptors")
}

sourceSets {
    "main" {
        resources.srcDir("../completion/resources")
        java.srcDir("../completion/src")
        java.srcDir("src")
        resources.srcDir("resources")
        resources.srcDir("resources-en")
        java.srcDir("../live-templates/src")
    }
    "test" {
        java.srcDir("../completion/test")
        java.srcDir("test")
        java.srcDir("../live-templates/test")
    }
}

testsJar()